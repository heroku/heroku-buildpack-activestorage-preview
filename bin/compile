#!/usr/bin/env bash
# bin/compile <BUILD_DIR> <CACHE_DIR> <ENV_DIR>

set -eu -o pipefail

if [[ $STACK == "heroku-2"[02] ]]; then
	FFMPEG_VERSION="5.1.4"
else
	FFMPEG_VERSION="7.0.1"
fi
INSTALL_URL="https://heroku-activestorage-default.s3.amazonaws.com/dist_${STACK}_$(dpkg --print-architecture)/ffmpeg-${FFMPEG_VERSION}.tar.gz"

BUILDPACK_DIR="$(dirname "$(dirname "$0")")"
BUILD_DIR="$1"
CACHE_DIR="$2"

# Clear legacy cache. All assets are on S3 or re-downloaded
# every time. By removing old cache, we reduce cache size
# and do not affect build times.
rm -rf "$CACHE_DIR/.heroku/activestorage-preview"

curl_retry_on_18() {
  local ec=18;
  local attempts=0;
  while (( ec == 18 && attempts++ < 3 )); do
    curl "$@" # -C - would return code 33 if unsupported by server
    ec=$?
  done
  return $ec
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

echo '-----> Installing binary dependencies for ActiveStorage Preview'

INSTALL_DIR="$BUILD_DIR/.heroku/activestorage-preview"
mkdir -p "$INSTALL_DIR"

echo "Downloading ffmpeg version $FFMPEG_VERSION" | indent
curl_retry_on_18 -s --fail --retry 3 --retry-connrefused --connect-timeout "${CURL_CONNECT_TIMEOUT:-3}" "$INSTALL_URL" | tar xvz -C "$INSTALL_DIR" >/dev/null 2>&1
echo 'Installing ffmpeg' | indent
echo 'Done' | indent

paths=$(cd "$BUILD_DIR" && find ./.heroku/activestorage-preview -iregex '.*/bin' -type d)

echo 'Exporting environment variables' | indent
# Write profile.d script for run time support
mkdir -p "$BUILD_DIR/.profile.d"
cat <<EOF >"$BUILD_DIR/.profile.d/000_activestorage_preview.sh"
export PATH="$(echo "$paths" | xargs -n 1 | sed 's/^./$HOME/' | paste -s -d ':' -):\$PATH"
EOF

# Export to other buildpacks for build time support
export PATH="$(echo "$paths" | xargs -n 1 | sed "s/^./${BUILD_DIR//\//\\/}/" | paste -s -d ':' -)${PATH:+:}${PATH:-}"
export | grep -E -e ' PATH=' >"$BUILDPACK_DIR/export"
echo 'Done' | indent
